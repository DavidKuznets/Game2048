{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.board = initialState;\n        this.score = 0;\n        this.status = \"idle\";\n        this.cells = document.querySelectorAll(\".field-cell\");\n        this.scoreElement = document.querySelector(\".game-score\");\n        this.messageLose = document.querySelector(\".message-lose\");\n        this.messageWin = document.querySelector(\".message-win\");\n        this.messageStart = document.querySelector(\".message-start\");\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomTile();\n                this.addRandomTile();\n                this.updateBoard();\n                this.hideMessages();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.status = \"idle\";\n                this.start();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.board[i][j] === 0) emptyCells.push({\n                        row: i,\n                        col: j\n                    });\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = emptyCells[Math.floor(Math.random() * emptyCells.length)], row = _emptyCells_Math_floor.row, col = _emptyCells_Math_floor.col;\n                    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(function(row) {\n                    return row;\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(function(row) {\n                    return row.reverse();\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.moveColumns(function(col) {\n                    return col;\n                });\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.moveColumns(function(col) {\n                    return col.reverse();\n                });\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(transformRow) {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var i = 0; i < 4; i++){\n                    var row = transformRow((0, $227c6742e0ff6f82$export$71511d61b312f219)(this.board[i]));\n                    var compressed = this.compressRow(row);\n                    var merged = this.mergeRow(compressed);\n                    var finalRow = this.compressRow(merged);\n                    if (row.toString() !== finalRow.toString()) moved = true;\n                    this.board[i] = transformRow((0, $227c6742e0ff6f82$export$71511d61b312f219)(finalRow));\n                }\n                if (moved) {\n                    this.addRandomTile();\n                    this.checkGameOver();\n                    this.updateBoard();\n                }\n            }\n        },\n        {\n            key: \"moveColumns\",\n            value: function moveColumns(transformCol) {\n                this.transpose();\n                this.move(transformCol);\n                this.transpose();\n                this.updateBoard();\n            }\n        },\n        {\n            key: \"transpose\",\n            value: function transpose() {\n                var _this = this;\n                var firstRow = this.board[0];\n                this.board = firstRow.map(function(_, colIndex) {\n                    return _this.board.map(function(row) {\n                        return row[colIndex];\n                    });\n                });\n            }\n        },\n        {\n            key: \"compressRow\",\n            value: function compressRow(row) {\n                return row.filter(function(val) {\n                    return val !== 0;\n                }).concat(Array(4).fill(0)).slice(0, 4);\n            }\n        },\n        {\n            key: \"mergeRow\",\n            value: function mergeRow(row) {\n                for(var i = 0; i < 3; i++)if (row[i] !== 0 && row[i] === row[i + 1]) {\n                    row[i] *= 2;\n                    row[i + 1] = 0;\n                    this.score += row[i];\n                }\n                return row;\n            }\n        },\n        {\n            key: \"checkGameOver\",\n            value: function checkGameOver() {\n                if (this.board.flat().includes(0)) return;\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    if (j < 3 && this.board[i][j] === this.board[i][j + 1] || i < 3 && this.board[i][j] === this.board[i + 1][j]) return;\n                }\n                this.status = \"gameover\";\n                this.showMessage(this.messageLose);\n            }\n        },\n        {\n            key: \"checkWin\",\n            value: function checkWin() {\n                if (this.board.flat().includes(2048)) {\n                    this.status = \"win\";\n                    this.showMessage(this.messageWin);\n                }\n            }\n        },\n        {\n            key: \"updateBoard\",\n            value: function updateBoard() {\n                var index = 0;\n                for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n                    this.cells[index].textContent = this.board[i][j] !== 0 ? this.board[i][j] : \"\";\n                    this.cells[index].className = \"field-cell field-cell--\".concat(this.board[i][j]);\n                    index++;\n                }\n                this.scoreElement.textContent = this.score;\n                this.checkWin();\n            }\n        },\n        {\n            key: \"showMessage\",\n            value: function showMessage(message) {\n                this.messageLose.classList.add(\"hidden\");\n                this.messageWin.classList.add(\"hidden\");\n                this.messageStart.classList.add(\"hidden\");\n                message.classList.remove(\"hidden\");\n            }\n        },\n        {\n            key: \"hideMessages\",\n            value: function hideMessages() {\n                this.messageLose.classList.add(\"hidden\");\n                this.messageWin.classList.add(\"hidden\");\n                this.messageStart.classList.add(\"hidden\");\n            }\n        }\n    ]);\n    return Game;\n}();\nvar $3d28d7f1aac198f5$export$2e2bcd8739ae039 = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game2048 = new (0, $3d28d7f1aac198f5$export$2e2bcd8739ae039)();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button.start\");\nfunction $197cd56b15c33885$var$updateButton() {\n    if ($197cd56b15c33885$var$game2048.getStatus() === \"idle\") {\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n    } else {\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n    }\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game2048.getStatus() === \"idle\") $197cd56b15c33885$var$game2048.start();\n    else $197cd56b15c33885$var$game2048.restart();\n    $197cd56b15c33885$var$updateButton();\n});\n$197cd56b15c33885$var$updateButton();\ndocument.addEventListener(\"keydown\", function(e) {\n    if ($197cd56b15c33885$var$game2048.getStatus() !== \"playing\") return;\n    switch(e.key){\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game2048.moveLeft();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game2048.moveRight();\n            break;\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game2048.moveUp();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game2048.moveDown();\n            break;\n    }\n});\n\n})();\n//# sourceMappingURL=index.d1327870.js.map\n","import Game from '../modules/Game.class.js';\n\nconst game2048 = new Game();\nconst button = document.querySelector('.button.start');\n\nfunction updateButton() {\n  if (game2048.getStatus() === 'idle') {\n    button.textContent = 'Start';\n    button.classList.remove('restart');\n    button.classList.add('start');\n  } else {\n    button.textContent = 'Restart';\n    button.classList.remove('start');\n    button.classList.add('restart');\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (game2048.getStatus() === 'idle') {\n    game2048.start();\n  } else {\n    game2048.restart();\n  }\n  updateButton();\n});\n\nupdateButton();\n\ndocument.addEventListener('keydown', (e) => {\n  if (game2048.getStatus() !== 'playing') {\n    return;\n  }\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      game2048.moveLeft();\n      break;\n    case 'ArrowRight':\n      game2048.moveRight();\n      break;\n    case 'ArrowUp':\n      game2048.moveUp();\n      break;\n    case 'ArrowDown':\n      game2048.moveDown();\n      break;\n  }\n});\n","class Game {\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.board = initialState;\n    this.score = 0;\n    this.status = 'idle';\n    this.cells = document.querySelectorAll('.field-cell');\n    this.scoreElement = document.querySelector('.game-score');\n    this.messageLose = document.querySelector('.message-lose');\n    this.messageWin = document.querySelector('.message-win');\n    this.messageStart = document.querySelector('.message-start');\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomTile();\n    this.addRandomTile();\n    this.updateBoard();\n    this.hideMessages();\n  }\n\n  restart() {\n    this.board = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n    this.start();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push({ row: i, col: j });\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const { row, col } =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  moveLeft() {\n    this.move((row) => row);\n  }\n\n  moveRight() {\n    this.move((row) => row.reverse());\n  }\n\n  moveUp() {\n    this.moveColumns((col) => col);\n  }\n\n  moveDown() {\n    this.moveColumns((col) => col.reverse());\n  }\n\n  move(transformRow) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let i = 0; i < 4; i++) {\n      const row = transformRow([...this.board[i]]);\n      const compressed = this.compressRow(row);\n      const merged = this.mergeRow(compressed);\n      const finalRow = this.compressRow(merged);\n\n      if (row.toString() !== finalRow.toString()) {\n        moved = true;\n      }\n      this.board[i] = transformRow([...finalRow]);\n    }\n\n    if (moved) {\n      this.addRandomTile();\n      this.checkGameOver();\n      this.updateBoard();\n    }\n  }\n\n  moveColumns(transformCol) {\n    this.transpose();\n    this.move(transformCol);\n    this.transpose();\n    this.updateBoard();\n  }\n\n  transpose() {\n    const firstRow = this.board[0];\n\n    this.board = firstRow.map((_, colIndex) => {\n      return this.board.map((row) => row[colIndex]);\n    });\n  }\n\n  compressRow(row) {\n    return row\n      .filter((val) => val !== 0)\n      .concat(Array(4).fill(0))\n      .slice(0, 4);\n  }\n\n  mergeRow(row) {\n    for (let i = 0; i < 3; i++) {\n      if (row[i] !== 0 && row[i] === row[i + 1]) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        this.score += row[i];\n      }\n    }\n\n    return row;\n  }\n\n  checkGameOver() {\n    if (this.board.flat().includes(0)) {\n      return;\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (\n          (j < 3 && this.board[i][j] === this.board[i][j + 1]) ||\n          (i < 3 && this.board[i][j] === this.board[i + 1][j])\n        ) {\n          return;\n        }\n      }\n    }\n    this.status = 'gameover';\n    this.showMessage(this.messageLose);\n  }\n\n  checkWin() {\n    if (this.board.flat().includes(2048)) {\n      this.status = 'win';\n      this.showMessage(this.messageWin);\n    }\n  }\n\n  updateBoard() {\n    let index = 0;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.cells[index].textContent =\n          this.board[i][j] !== 0 ? this.board[i][j] : '';\n\n        this.cells[index].className =\n          `field-cell field-cell--${this.board[i][j]}`;\n        index++;\n      }\n    }\n    this.scoreElement.textContent = this.score;\n    this.checkWin();\n  }\n\n  showMessage(message) {\n    this.messageLose.classList.add('hidden');\n    this.messageWin.classList.add('hidden');\n    this.messageStart.classList.add('hidden');\n    message.classList.remove('hidden');\n  }\n\n  hideMessages() {\n    this.messageLose.classList.add('hidden');\n    this.messageWin.classList.add('hidden');\n    this.messageStart.classList.add('hidden');\n  }\n}\n\nexport default Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$197cd56b15c33885$var$game2048","protoProps","Game","initialState","arguments","instance","Constructor","board","score","status","cells","document","querySelectorAll","scoreElement","querySelector","messageLose","messageWin","messageStart","key","value","addRandomTile","updateBoard","hideMessages","start","emptyCells","j","push","row","col","_emptyCells_Math_floor","Math","floor","random","move","reverse","moveColumns","transformRow","moved","compressed","compressRow","merged","mergeRow","finalRow","checkGameOver","transformCol","transpose","_this","firstRow","map","_","colIndex","filter","val","concat","fill","flat","includes","showMessage","index","textContent","className","checkWin","message","classList","add","remove","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$button","$197cd56b15c33885$var$updateButton","getStatus","addEventListener","restart","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.d1327870.js.map"}